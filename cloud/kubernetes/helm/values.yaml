
# Default values.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Required parameter to be passed for all cloud providers
cpType: minikube      #cpType can be minikube, aws, awsfargate, azure, openshift, gcp or oci
#-----------------------------------------
cmType: unclustered                     #cmType can be unclustered,as2,ftl,ignite
omType: inmemory                        #omType can be inmemory,store,cache
bsType: na                              #BackingStore can be none sharednothing, store
storeType: na                           #storeType can be rdbms, as4, cassandra
cacheType: as2                          #cacheType can be as2, ignite

## RMS related
enableRMS: false       # set to true, if it is BE app deployment and want to enable hot deployments using RMS
rmsDeployment: false   # set to true, if it is RMS app deployment

# Image name and pull policy required for be app
image: befdapp:01
imagePullPolicy: IfNotPresent
# imagepullsecret Provide image pull secret name, If the image is available in a private registry. You can create image pull secret manually OR use imageCredentials section to create it. 
imagepullsecret:

# imageCredentials Credentials to pull image from a private registry. You can skip this if you want create image pull secret manually.
imageCredentials:
  registry:                             #Ex: hub.docker.com
  username:
  password:
  email:

#*************************Agents env varaibles****************************************************

# envVarsFromConfigMaps:  Load GVs or environment variables from Kubernetes ConfigMaps
envVarsFromConfigMaps:
# - configmap-1     # Update the ConfigMap name you want to use
# - configmap-2

# envVarsFromSecrets:     Load GVs or environment variables from Kubernetes Secrets
envVarsFromSecrets:
# - secret-1              # Update the Secret name you want to use
# - secret-2

# ignite.discovery_url is GV of discovery URL
ignite:
  discovery_url: IGNITE_gv_DISCOVERY_URL
  serviceaccount: ignitecache

# ignite_gv requires to define in key as GV and value as value, define all gv's except ignite URL and update the ignite listen ports as per requirement
ignite_gv:
  IGNITE_gv_LISTEN_PORT: "47500..47510"
  IGNITE_gv_COMMUNICATION_PORT: "47100..47110"
  tra.be.ignite.discovery.type: k8s     # Do not edit this property, It is used for Ignite Service Discovery
  tra.be.ignite.k8s.namespace: default  # Do not edit this property, It is used for Ignite Service Discovery
  
ftl:
  FTL_gv_REALM_SERVER: http://localhost:8585
  FTL_gv_CLUSTER_NAME: ftl.default.cluster

envVars:
  # Consul GV provider specific environment variables
  # CONSUL_SERVER_URL: http://192.168.0.1:8500
  # BE_APP_NAME: fd
  # APP_CONFIG_PROFILE: test
  # HTTP GV provider specific environment variables
  # GVP_HTTP_SERVER_URL: URL
  # GVP_HTTP_HEADERS: "Content-Type:application/json"
  # custom gv provider specific environment variables
  # other environment variables
  
#*************************Agents Part****************************************************

agents:
- name: inferenceagent
  PU: default                             # processing unit
  cacheStorageEnabled: false              # set to true, if the agent's PU cache storage is enabled. This allows applying required labels to agent instances so that they are visible to discovery or cache services.
  replicas: 1                             # desired number of agents
  discoverableReplicas: 0                 # Number of agents to participate in the discovery (applicable only for cmType = as2). It should be less than or equal to replicas.
  expose:
  - name: jmx                             # service name
    port: 5555                            # container port to be exposed
    type: ClusterIP                       # service type. Supported values: NodePort, LoadBalancer or ClusterIP
  - name: httpchannel
    port: 8090
    type: NodePort
  hpa:                                    # agents[].hpa: (Horizontal Pod Autoscaler).
    maxReplicas: 5                        # maximum number of replicas HPA can apply
    cpuMetric:
      enable: false                       # Set to true, to enable CPU metric based HPA
      averageUtilizationPercentage: 90    # HPA scales up(or down) pods count till maxReplicas, if CPU utilization % reaches above(or below) averageUtilizationPercentage
    memoryMetric:
      enable: false                       # Set to true, to enable memory metric based HPA
      averageUtilizationPercentage: 90    # HPA scales up(or down) pods count till maxReplicas, if memory utilization % reaches above(or below) averageUtilizationPercentage
- name: cacheagent
  PU: cache
  cacheStorageEnabled: true
  replicas: 0
  discoverableReplicas: 0


#*************************Health check Part****************************************************
# Required for cache and inference agent health check
healthcheck:
  enabled: false        #Set to true - to enable healthcheck
  livenessProbe:
    port: 5555
    initialDelaySeconds: 5
    periodSeconds: 5
  readinessProbe:
    port: 5555
    initialDelaySeconds: 5 
    periodSeconds: 5 

# podAntiAffinity: Set to true to allow evenly distribution of pods across available nodes
podAntiAffinity: false

# Update how much of memory, cpu resource a BE app container needs.
resources:
  memory: 1.2Gi
  cpu: 1

#*************************Service Part****************************************************

ignitePort:
  dis0: 47500
  dis1: 47501
  dis2: 47502
  dis3: 47503
  dis4: 47504
  dis5: 47505
  dis6: 47506
  dis7: 47507
  dis8: 47508
  dis9: 47509
  dis10: 47510  

#*************************ConfigMap****************************************************

configs:
  # # mysql
  # BACKINGSTORE_JDBC_DRIVER: com.mysql.jdbc.Driver
  # BACKINGSTORE_JDBC_URL: jdbc:mysql://mysql-0.mysql.default.svc.cluster.local:3306/BE_DATABASE
  # BACKINGSTORE_JDBC_USERNAME: BE_USER
  # BACKINGSTORE_JDBC_PASSWORD: BE_USER
  # BACKINGSTORE_JDBC_POOL_SIZE: 5
  # BACKINGSTORE_JDBC_LOGIN_TIMEOUT: 0
  # # Cassandra
  # CASS_SERVER: localhost:9042
  # CASS_KEYSPACE_NAME: testdb
  # CASS_USERNAME: cassandra
  # CASS_PASSWORD: cassandra
  # # AS4
  # REALM_URL: http://localhost:8585
  # SEC_REALM_URL: http://localhost:8585
  # GRID_NAME: fd_store
  # STORE_TIMEOUT: 5
  # STORE_WAITTIME: 0.1
  # STORE_POOLSIZE: 1
  # # metrics - influx config
  # INFLUXDB_URL: http://influxDB:8086
  # INFLUXBUCKET: fdmetrics 
  # INFLUXTOKEN: be-examples-fdmetrics-token
  # INFLUXORG: be-examples  
  # # metrics -  streambase LDM
  # LDM_URL: lv://localhost:10080
  # # metrics -  custom (ex:elastic, prometheus etc..)
  # URL: http://localhost:1234

#*************************Volumes Part****************************************************
persistence:
  logs: false           # Set to true to enable logs persistence
  rmsSecurity: false    # Set to true to enable RMS security folder persistence
  rmsWebstudio: false   # Set to true to enable RMS WebStudio folder persistence

  # persistence.rmsSharedPVC: It is used when enableRMS is set to true. It is the PVC (generated by the RMS deployment) points to rms-shared folder.
  # By using this PVC current deployment's pods able to mount to the same rms-shared folder so that hot deployments can happen.
  # It takes of the form "<rms helm deployment name>-rms-shared"
  rmsSharedPVC: "RMSDEPLOYMENTNAME-rms-shared"
  
  # dynamic provisioning: If you have storage class available in the cluster and want to use it for PV, PVCs provisioning
  # then update persistence.storageClass value.

  # persistence.storageClass
  # Note: For RMS deployment use storage classes which supports ReadWriteMany access mode (Ex: azurefile  )
  #
  # If defined,             defined storage class would be used for PV/PVC provisioning
  # If set to "-",          disables dynamic PV/PVC provisioning
  # If undefined or empty,  [NOT RECOMENDED] cluster's default storage class would be used for PV/PVC provisioning. Please note that if you use this option helm upgrade will fail.
  storageClass: "standard"
  scSupportsReadWriteMany: true # Set to true, if the defined persistence.storageClass supports access mode ReadWriteMany otherwise set to false.
  size: 0.5Gi         # desired storage size


  # static provisioning: It offers more control over which directory paths (storage provider like EFS) used to generage PVs.
  
  # persistence.basePath It is the obsolute path of the directory on the storage provider's file system (like AWS EFS). At this path
  # following sub-directories should exist.
  # .
  # |--data-store       -> Required in case of sharednothing BE app deployment
  # |--logs             -> Required if you want to persist logs
  # |--rms-shared       -> Required in case of RMS deployents
  # |--rms-security     -> Required in case of RMS deployents
  # |--rms-webstudio    -> Required in case of RMS deployents
  #
  # Dont add trailing slash ('/') at the end of the path. Valid paths:
  # ""              ->  To represent root folder
  # "/volume/001"   ->  To represent /volume/001 folder
  basePath: "/volume1"

  # persistence.fileSystemId is the file system ID
  #
  # If your cloud provider is AWS and want to use EFS then it is the EFS file system ID.
  # For successful PV/PVC provisioing, Refer to https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html and create an Amazon EFS file system. 
  # 
  fileSystemId: fs-beec7f0a


#Required for store in  all cloud providers
mysql:
  enabled: false              #use true for store
  backingstoreUrlGV: BACKINGSTORE_JDBC_URL    # This GV gets updated with mysql service url
  image:
    repository: "mysql"
    tag: "5.7"
  primary:
    args: [ "--lower_case_table_names=1","--sql_mode=IGNORE_SPACE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" ]
    persistence:
      enabled: false
      # storageClass: "-"     #Type of persistent volume claim
  auth:
    rootPassword: password12
    database: BE_DATABASE  #database name

# ---------------------------------Information related to metrics(influx/liveview)-------------------------------------------------

# Custom values for InfluxDB chart, setting influxdb.enabled to true will deploy influxDB helm chart
influxdb:
  enabled: false
  influxdbUrlGV: INFLUXDB_URL   # This GV gets updated with influxdb service url
  image:  # Comment influx image, repository and tag for BE version 6.0 
    repository: quay.io/influxdb/influxdb   
    tag: v2.0.1
  persistence:
    enabled: false            # Set to true for persistence

# Custom values for Grafana chart, setting influxdb.enabled to true will deploy grafana helm chart
grafana:
  enabled: false
  image:
    tag: 7.3.5
  service:
    type: NodePort          # Default is clusterIP, Loadbalancer for Azure(Change as per requirement)
